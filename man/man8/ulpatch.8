.TH ulpatch 8  "2022-10-01" "USER COMMANDS"
.SH NAME
ulpatch \- Userspace livepatch.
.SH SYNOPSIS
.B ulpatch
[\fI\,OPTION\/\fR]...
.SH DESCRIPTION
.\" Add any additional description here
.PP
ulpatch Patching a running process

This program is also a basic command of ulpatch

.SH ARGUMENTS
.TP
\fB\-p\fR, \fB\-\-pid\fR [PID]
Specify a target process's PID.
.TP
\fB\-\-patch\fR [ULPATCH.ELF]
Specify a ulpatch.elf file to patch to target process.
.TP
\fB\-\-unpatch\fR
Unpatch a latest ulpatch from target process.
.TP
\fB\-\-log-level\fR[=\fI\,LEVEL\/\fR], \fB\-\-lv\fR[=\fI\,LEVEL\/\fR]
Specify a log level. The LEVEL could be number(see /usr/include/sys/syslog.h) or string(debug,dbg,info,inf,notice,note,warning,warn,error,err,crit,alert,emerg).
For example, if you want to set log level to LOG_ERR, just: --lv=error.
.TP
\fB\-\-log-debug\fR
Set log level to DEBUG.
.TP
\fB\-\-log-error\fR
Set log level to ERROR.
.TP
\fB\-V\fR, \fB\-\-verbose\fR
Show verbose information.
.TP
\fB\-h\fR, \fB\-\-help\fR
Show help information.
.TP
\fB\-v\fR, \fB\-\-version\fR
Show version information.

.SH MACROS
.TP
__ULP_DEV
If you develope an ulpatch file, you need to define __ULP_DEV and include <ulpatch/meta.h> header in your ulpatch source code.

.SH ULP DEMO
More to see the documentations in ulpatch source code tree.
.SS Program source
\&
.\" SRC BEGIN (tee.c)
.EX
#ifndef __ULP_DEV
#define __ULP_DEV 1
#endif
#include <stdio.h>
#include <ulpatch/meta.h>

void ulpatch_print_hello_exit(void)
{
	printf("Patched.\\n");
}
ULPATCH_INFO(ulpatch_print_hello_exit, print_hello, "Rong Tao");
.EE
.\" SRC END
.SH LINKS
.SS aarch64 relocations
https://github.com/ARM-software/abi-aa/releases
https://docslib.org/doc/4448214/elf-for-the-arm-64-bit-architecture-aarch64
.SH OS
Linux
.SH STABILITY
Unstable - in development.
.SH AUTHOR
Written by Rong Tao
.SH SEE ALSO
ulpinfo(8), ulftrace(8), ultask(8)
